// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  documents     Document[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Document {
  id             String           @default(cuid())
  title          String           @id @unique
  draft          Boolean          @default(true)
  pdfLink        String
  content        Content[]
  userAnnotation UserAnnotation[]
  author         User?            @relation(fields: [authorId], references: [id])
  authorId       String?
}

model Content {
  id         String   @id @default(cuid())
  documentId String
  document   Document @relation(fields: [documentId], references: [title])
  text       String
  page       Int
}

model UserAnnotation {
  id                   String   @id @default(cuid())
  documentId           String
  document             Document @relation(fields: [documentId], references: [title])
  highlightStartOffset Int
  highlightEndOffset   Int
  highlightTextContent String
  highlightNodeHtml    String
  highlightTagName     String
  color                String
  top                  Float
  left                 Float
  notes                Note[]
}

model Note {
  id               String         @id @default(cuid())
  text             String
  dateOfPost       String
  page             Int
  userAnnotation   UserAnnotation @relation(fields: [userAnnotationId], references: [id])
  userAnnotationId String
}
